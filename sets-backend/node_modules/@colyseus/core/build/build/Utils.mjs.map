{"version":3,"file":"Utils.mjs","sources":["../Utils.mjs"],"sourcesContent":["import nanoid from 'nanoid';\nimport { debugAndPrintError } from './Debug.mjs';\n\n// remote room call timeouts\nconst REMOTE_ROOM_SHORT_TIMEOUT = Number(process.env.COLYSEUS_PRESENCE_SHORT_TIMEOUT || 2000);\nfunction generateId(length = 9) {\n    return nanoid(length);\n}\n//\n// nodemon sends SIGUSR2 before reloading\n// (https://github.com/remy/nodemon#controlling-shutdown-of-your-script)\n//\nconst signals = ['SIGINT', 'SIGTERM', 'SIGUSR2'];\nfunction registerGracefulShutdown(callback) {\n    /**\n     * Gracefully shutdown on uncaught errors\n     */\n    process.on('uncaughtException', (err) => {\n        debugAndPrintError(err);\n        callback(err);\n    });\n    signals.forEach((signal) => process.once(signal, () => callback()));\n}\nfunction retry(cb, maxRetries = 3, errorWhiteList = [], retries = 0) {\n    return new Promise((resolve, reject) => {\n        cb()\n            .then(resolve)\n            .catch((e) => {\n            if (errorWhiteList.indexOf(e.constructor) !== -1 &&\n                retries++ < maxRetries) {\n                setTimeout(() => {\n                    retry(cb, maxRetries, errorWhiteList, retries).\n                        then(resolve).\n                        catch((e2) => reject(e2));\n                }, Math.floor(Math.random() * Math.pow(2, retries) * 400));\n            }\n            else {\n                reject(e);\n            }\n        });\n    });\n}\nclass Deferred {\n    promise;\n    resolve;\n    reject;\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n    then(func) {\n        return this.promise.then.apply(this.promise, arguments);\n    }\n    catch(func) {\n        return this.promise.catch(func);\n    }\n}\nfunction spliceOne(arr, index) {\n    // manually splice availableRooms array\n    // http://jsperf.com/manual-splice\n    if (index === -1 || index >= arr.length) {\n        return false;\n    }\n    const len = arr.length - 1;\n    for (let i = index; i < len; i++) {\n        arr[i] = arr[i + 1];\n    }\n    arr.length = len;\n    return true;\n}\nfunction merge(a, ...objs) {\n    for (let i = 0, len = objs.length; i < len; i++) {\n        const b = objs[i];\n        for (const key in b) {\n            if (b.hasOwnProperty(key)) {\n                a[key] = b[key];\n            }\n        }\n    }\n    return a;\n}\n\nexport { Deferred, REMOTE_ROOM_SHORT_TIMEOUT, generateId, merge, registerGracefulShutdown, retry, spliceOne };\n//# sourceMappingURL=Utils.mjs.map\n"],"names":[],"mappings":";;;AAGA;AACkC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,+BAA+B,IAAI,IAAI,EAAE;AAuD9F,SAAS,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE;AAC/B;AACA;AACA,IAAI,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,MAAM,EAAE;AAC7C,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;AAC/B,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACtC,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5B,KAAK;AACL,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;AACrB,IAAI,OAAO,IAAI,CAAC;AAChB;;;;"}